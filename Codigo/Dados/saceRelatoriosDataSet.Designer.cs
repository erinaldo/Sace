//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SACE.Dados {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("saceRelatoriosDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class saceRelatoriosDataSet : global::System.Data.DataSet {
        
        private dt_RelContaDataTable tabledt_RelConta;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public saceRelatoriosDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected saceRelatoriosDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dt_RelConta"] != null)) {
                    base.Tables.Add(new dt_RelContaDataTable(ds.Tables["dt_RelConta"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_RelContaDataTable dt_RelConta {
            get {
                return this.tabledt_RelConta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            saceRelatoriosDataSet cln = ((saceRelatoriosDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dt_RelConta"] != null)) {
                    base.Tables.Add(new dt_RelContaDataTable(ds.Tables["dt_RelConta"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledt_RelConta = ((dt_RelContaDataTable)(base.Tables["dt_RelConta"]));
            if ((initTable == true)) {
                if ((this.tabledt_RelConta != null)) {
                    this.tabledt_RelConta.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "saceRelatoriosDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/saceRelatoriosDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledt_RelConta = new dt_RelContaDataTable();
            base.Tables.Add(this.tabledt_RelConta);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedt_RelConta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            saceRelatoriosDataSet ds = new saceRelatoriosDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dt_RelContaRowChangeEventHandler(object sender, dt_RelContaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_RelContaDataTable : global::System.Data.TypedTableBase<dt_RelContaRow> {
            
            private global::System.Data.DataColumn columncodConta;
            
            private global::System.Data.DataColumn columncodEntrada;
            
            private global::System.Data.DataColumn columncodSaida;
            
            private global::System.Data.DataColumn columndocumento;
            
            private global::System.Data.DataColumn columncodPlanoConta;
            
            private global::System.Data.DataColumn columncodPessoa;
            
            private global::System.Data.DataColumn columndataVencimento;
            
            private global::System.Data.DataColumn columnvalor;
            
            private global::System.Data.DataColumn columnsituacao;
            
            private global::System.Data.DataColumn columnobservacao;
            
            private global::System.Data.DataColumn columntipoConta;
            
            private global::System.Data.DataColumn columnnome;
            
            private global::System.Data.DataColumn columncpf_Cnpj;
            
            private global::System.Data.DataColumn columnendereco;
            
            private global::System.Data.DataColumn columncep;
            
            private global::System.Data.DataColumn columnbairro;
            
            private global::System.Data.DataColumn columncidade;
            
            private global::System.Data.DataColumn columnuf;
            
            private global::System.Data.DataColumn columnfone1;
            
            private global::System.Data.DataColumn columnfone2;
            
            private global::System.Data.DataColumn columnlimiteCompra;
            
            private global::System.Data.DataColumn columnvalorComissao;
            
            private global::System.Data.DataColumn columnTipo;
            
            private global::System.Data.DataColumn columncodPagamento;
            
            private global::System.Data.DataColumn columncodFormaPagamento;
            
            private global::System.Data.DataColumn columnvalorPago;
            
            private global::System.Data.DataColumn columnvalorDiferenca;
            
            private global::System.Data.DataColumn columncodContaBanco;
            
            private global::System.Data.DataColumn columndataBaixa;
            
            private global::System.Data.DataColumn columndescricao;
            
            private global::System.Data.DataColumn columnagencia;
            
            private global::System.Data.DataColumn columnExpr1;
            
            private global::System.Data.DataColumn columnsaldo;
            
            private global::System.Data.DataColumn columncodBanco;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_RelContaDataTable() {
                this.TableName = "dt_RelConta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_RelContaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dt_RelContaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codContaColumn {
                get {
                    return this.columncodConta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codEntradaColumn {
                get {
                    return this.columncodEntrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codSaidaColumn {
                get {
                    return this.columncodSaida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn documentoColumn {
                get {
                    return this.columndocumento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codPlanoContaColumn {
                get {
                    return this.columncodPlanoConta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codPessoaColumn {
                get {
                    return this.columncodPessoa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataVencimentoColumn {
                get {
                    return this.columndataVencimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorColumn {
                get {
                    return this.columnvalor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn situacaoColumn {
                get {
                    return this.columnsituacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn observacaoColumn {
                get {
                    return this.columnobservacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoContaColumn {
                get {
                    return this.columntipoConta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nomeColumn {
                get {
                    return this.columnnome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cpf_CnpjColumn {
                get {
                    return this.columncpf_Cnpj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn enderecoColumn {
                get {
                    return this.columnendereco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cepColumn {
                get {
                    return this.columncep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bairroColumn {
                get {
                    return this.columnbairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cidadeColumn {
                get {
                    return this.columncidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ufColumn {
                get {
                    return this.columnuf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fone1Column {
                get {
                    return this.columnfone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fone2Column {
                get {
                    return this.columnfone2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn limiteCompraColumn {
                get {
                    return this.columnlimiteCompra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorComissaoColumn {
                get {
                    return this.columnvalorComissao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codPagamentoColumn {
                get {
                    return this.columncodPagamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codFormaPagamentoColumn {
                get {
                    return this.columncodFormaPagamento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorPagoColumn {
                get {
                    return this.columnvalorPago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorDiferencaColumn {
                get {
                    return this.columnvalorDiferenca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codContaBancoColumn {
                get {
                    return this.columncodContaBanco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataBaixaColumn {
                get {
                    return this.columndataBaixa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descricaoColumn {
                get {
                    return this.columndescricao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agenciaColumn {
                get {
                    return this.columnagencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saldoColumn {
                get {
                    return this.columnsaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codBancoColumn {
                get {
                    return this.columncodBanco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_RelContaRow this[int index] {
                get {
                    return ((dt_RelContaRow)(this.Rows[index]));
                }
            }
            
            public event dt_RelContaRowChangeEventHandler dt_RelContaRowChanging;
            
            public event dt_RelContaRowChangeEventHandler dt_RelContaRowChanged;
            
            public event dt_RelContaRowChangeEventHandler dt_RelContaRowDeleting;
            
            public event dt_RelContaRowChangeEventHandler dt_RelContaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddt_RelContaRow(dt_RelContaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_RelContaRow Adddt_RelContaRow(
                        long codEntrada, 
                        long codSaida, 
                        string documento, 
                        long codPlanoConta, 
                        long codPessoa, 
                        System.DateTime dataVencimento, 
                        decimal valor, 
                        string situacao, 
                        string observacao, 
                        string tipoConta, 
                        string nome, 
                        string cpf_Cnpj, 
                        string endereco, 
                        string cep, 
                        string bairro, 
                        string cidade, 
                        string uf, 
                        string fone1, 
                        string fone2, 
                        decimal limiteCompra, 
                        decimal valorComissao, 
                        string Tipo, 
                        int codFormaPagamento, 
                        decimal valorPago, 
                        decimal valorDiferenca, 
                        long codContaBanco, 
                        System.DateTime dataBaixa, 
                        string descricao, 
                        string agencia, 
                        string Expr1, 
                        decimal saldo, 
                        int codBanco) {
                dt_RelContaRow rowdt_RelContaRow = ((dt_RelContaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        codEntrada,
                        codSaida,
                        documento,
                        codPlanoConta,
                        codPessoa,
                        dataVencimento,
                        valor,
                        situacao,
                        observacao,
                        tipoConta,
                        nome,
                        cpf_Cnpj,
                        endereco,
                        cep,
                        bairro,
                        cidade,
                        uf,
                        fone1,
                        fone2,
                        limiteCompra,
                        valorComissao,
                        Tipo,
                        null,
                        codFormaPagamento,
                        valorPago,
                        valorDiferenca,
                        codContaBanco,
                        dataBaixa,
                        descricao,
                        agencia,
                        Expr1,
                        saldo,
                        codBanco};
                rowdt_RelContaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_RelContaRow);
                return rowdt_RelContaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dt_RelContaDataTable cln = ((dt_RelContaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_RelContaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncodConta = base.Columns["codConta"];
                this.columncodEntrada = base.Columns["codEntrada"];
                this.columncodSaida = base.Columns["codSaida"];
                this.columndocumento = base.Columns["documento"];
                this.columncodPlanoConta = base.Columns["codPlanoConta"];
                this.columncodPessoa = base.Columns["codPessoa"];
                this.columndataVencimento = base.Columns["dataVencimento"];
                this.columnvalor = base.Columns["valor"];
                this.columnsituacao = base.Columns["situacao"];
                this.columnobservacao = base.Columns["observacao"];
                this.columntipoConta = base.Columns["tipoConta"];
                this.columnnome = base.Columns["nome"];
                this.columncpf_Cnpj = base.Columns["cpf_Cnpj"];
                this.columnendereco = base.Columns["endereco"];
                this.columncep = base.Columns["cep"];
                this.columnbairro = base.Columns["bairro"];
                this.columncidade = base.Columns["cidade"];
                this.columnuf = base.Columns["uf"];
                this.columnfone1 = base.Columns["fone1"];
                this.columnfone2 = base.Columns["fone2"];
                this.columnlimiteCompra = base.Columns["limiteCompra"];
                this.columnvalorComissao = base.Columns["valorComissao"];
                this.columnTipo = base.Columns["Tipo"];
                this.columncodPagamento = base.Columns["codPagamento"];
                this.columncodFormaPagamento = base.Columns["codFormaPagamento"];
                this.columnvalorPago = base.Columns["valorPago"];
                this.columnvalorDiferenca = base.Columns["valorDiferenca"];
                this.columncodContaBanco = base.Columns["codContaBanco"];
                this.columndataBaixa = base.Columns["dataBaixa"];
                this.columndescricao = base.Columns["descricao"];
                this.columnagencia = base.Columns["agencia"];
                this.columnExpr1 = base.Columns["Expr1"];
                this.columnsaldo = base.Columns["saldo"];
                this.columncodBanco = base.Columns["codBanco"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncodConta = new global::System.Data.DataColumn("codConta", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodConta);
                this.columncodEntrada = new global::System.Data.DataColumn("codEntrada", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodEntrada);
                this.columncodSaida = new global::System.Data.DataColumn("codSaida", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodSaida);
                this.columndocumento = new global::System.Data.DataColumn("documento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndocumento);
                this.columncodPlanoConta = new global::System.Data.DataColumn("codPlanoConta", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodPlanoConta);
                this.columncodPessoa = new global::System.Data.DataColumn("codPessoa", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodPessoa);
                this.columndataVencimento = new global::System.Data.DataColumn("dataVencimento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndataVencimento);
                this.columnvalor = new global::System.Data.DataColumn("valor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalor);
                this.columnsituacao = new global::System.Data.DataColumn("situacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsituacao);
                this.columnobservacao = new global::System.Data.DataColumn("observacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservacao);
                this.columntipoConta = new global::System.Data.DataColumn("tipoConta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipoConta);
                this.columnnome = new global::System.Data.DataColumn("nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnome);
                this.columncpf_Cnpj = new global::System.Data.DataColumn("cpf_Cnpj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpf_Cnpj);
                this.columnendereco = new global::System.Data.DataColumn("endereco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnendereco);
                this.columncep = new global::System.Data.DataColumn("cep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncep);
                this.columnbairro = new global::System.Data.DataColumn("bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbairro);
                this.columncidade = new global::System.Data.DataColumn("cidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncidade);
                this.columnuf = new global::System.Data.DataColumn("uf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuf);
                this.columnfone1 = new global::System.Data.DataColumn("fone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfone1);
                this.columnfone2 = new global::System.Data.DataColumn("fone2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfone2);
                this.columnlimiteCompra = new global::System.Data.DataColumn("limiteCompra", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlimiteCompra);
                this.columnvalorComissao = new global::System.Data.DataColumn("valorComissao", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorComissao);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columncodPagamento = new global::System.Data.DataColumn("codPagamento", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodPagamento);
                this.columncodFormaPagamento = new global::System.Data.DataColumn("codFormaPagamento", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodFormaPagamento);
                this.columnvalorPago = new global::System.Data.DataColumn("valorPago", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorPago);
                this.columnvalorDiferenca = new global::System.Data.DataColumn("valorDiferenca", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorDiferenca);
                this.columncodContaBanco = new global::System.Data.DataColumn("codContaBanco", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodContaBanco);
                this.columndataBaixa = new global::System.Data.DataColumn("dataBaixa", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndataBaixa);
                this.columndescricao = new global::System.Data.DataColumn("descricao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescricao);
                this.columnagencia = new global::System.Data.DataColumn("agencia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagencia);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.columnsaldo = new global::System.Data.DataColumn("saldo", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaldo);
                this.columncodBanco = new global::System.Data.DataColumn("codBanco", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodBanco);
                this.columncodConta.AutoIncrement = true;
                this.columncodConta.AutoIncrementSeed = -1;
                this.columncodConta.AutoIncrementStep = -1;
                this.columncodConta.AllowDBNull = false;
                this.columndocumento.MaxLength = 20;
                this.columncodPlanoConta.AllowDBNull = false;
                this.columndataVencimento.AllowDBNull = false;
                this.columnvalor.AllowDBNull = false;
                this.columnsituacao.MaxLength = 1;
                this.columnobservacao.MaxLength = 64;
                this.columntipoConta.AllowDBNull = false;
                this.columntipoConta.MaxLength = 1;
                this.columnnome.AllowDBNull = false;
                this.columnnome.MaxLength = 40;
                this.columncpf_Cnpj.MaxLength = 14;
                this.columnendereco.MaxLength = 100;
                this.columncep.MaxLength = 8;
                this.columnbairro.MaxLength = 40;
                this.columncidade.MaxLength = 40;
                this.columnuf.MaxLength = 2;
                this.columnfone1.MaxLength = 10;
                this.columnfone2.MaxLength = 10;
                this.columnTipo.AllowDBNull = false;
                this.columnTipo.MaxLength = 1;
                this.columncodPagamento.AutoIncrement = true;
                this.columncodPagamento.AutoIncrementSeed = -1;
                this.columncodPagamento.AutoIncrementStep = -1;
                this.columndescricao.MaxLength = 40;
                this.columnagencia.MaxLength = 10;
                this.columnExpr1.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_RelContaRow Newdt_RelContaRow() {
                return ((dt_RelContaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_RelContaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dt_RelContaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_RelContaRowChanged != null)) {
                    this.dt_RelContaRowChanged(this, new dt_RelContaRowChangeEvent(((dt_RelContaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_RelContaRowChanging != null)) {
                    this.dt_RelContaRowChanging(this, new dt_RelContaRowChangeEvent(((dt_RelContaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_RelContaRowDeleted != null)) {
                    this.dt_RelContaRowDeleted(this, new dt_RelContaRowChangeEvent(((dt_RelContaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_RelContaRowDeleting != null)) {
                    this.dt_RelContaRowDeleting(this, new dt_RelContaRowChangeEvent(((dt_RelContaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedt_RelContaRow(dt_RelContaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                saceRelatoriosDataSet ds = new saceRelatoriosDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_RelContaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dt_RelContaRow : global::System.Data.DataRow {
            
            private dt_RelContaDataTable tabledt_RelConta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_RelContaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_RelConta = ((dt_RelContaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long codConta {
                get {
                    return ((long)(this[this.tabledt_RelConta.codContaColumn]));
                }
                set {
                    this[this.tabledt_RelConta.codContaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long codEntrada {
                get {
                    try {
                        return ((long)(this[this.tabledt_RelConta.codEntradaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codEntrada\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.codEntradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long codSaida {
                get {
                    try {
                        return ((long)(this[this.tabledt_RelConta.codSaidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codSaida\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.codSaidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string documento {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.documentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'documento\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.documentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long codPlanoConta {
                get {
                    return ((long)(this[this.tabledt_RelConta.codPlanoContaColumn]));
                }
                set {
                    this[this.tabledt_RelConta.codPlanoContaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long codPessoa {
                get {
                    try {
                        return ((long)(this[this.tabledt_RelConta.codPessoaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codPessoa\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.codPessoaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dataVencimento {
                get {
                    return ((global::System.DateTime)(this[this.tabledt_RelConta.dataVencimentoColumn]));
                }
                set {
                    this[this.tabledt_RelConta.dataVencimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal valor {
                get {
                    return ((decimal)(this[this.tabledt_RelConta.valorColumn]));
                }
                set {
                    this[this.tabledt_RelConta.valorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string situacao {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.situacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'situacao\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.situacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string observacao {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.observacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observacao\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.observacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipoConta {
                get {
                    return ((string)(this[this.tabledt_RelConta.tipoContaColumn]));
                }
                set {
                    this[this.tabledt_RelConta.tipoContaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nome {
                get {
                    return ((string)(this[this.tabledt_RelConta.nomeColumn]));
                }
                set {
                    this[this.tabledt_RelConta.nomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cpf_Cnpj {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.cpf_CnpjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cpf_Cnpj\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.cpf_CnpjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string endereco {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.enderecoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'endereco\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.enderecoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cep {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.cepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cep\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.cepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bairro {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.bairroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bairro\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.bairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cidade {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.cidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cidade\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.cidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uf {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.ufColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'uf\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.ufColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fone1 {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.fone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fone1\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.fone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fone2 {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.fone2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fone2\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.fone2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal limiteCompra {
                get {
                    try {
                        return ((decimal)(this[this.tabledt_RelConta.limiteCompraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'limiteCompra\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.limiteCompraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal valorComissao {
                get {
                    try {
                        return ((decimal)(this[this.tabledt_RelConta.valorComissaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorComissao\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.valorComissaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    return ((string)(this[this.tabledt_RelConta.TipoColumn]));
                }
                set {
                    this[this.tabledt_RelConta.TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long codPagamento {
                get {
                    try {
                        return ((long)(this[this.tabledt_RelConta.codPagamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codPagamento\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.codPagamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int codFormaPagamento {
                get {
                    try {
                        return ((int)(this[this.tabledt_RelConta.codFormaPagamentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codFormaPagamento\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.codFormaPagamentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal valorPago {
                get {
                    try {
                        return ((decimal)(this[this.tabledt_RelConta.valorPagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorPago\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.valorPagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal valorDiferenca {
                get {
                    try {
                        return ((decimal)(this[this.tabledt_RelConta.valorDiferencaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorDiferenca\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.valorDiferencaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long codContaBanco {
                get {
                    try {
                        return ((long)(this[this.tabledt_RelConta.codContaBancoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codContaBanco\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.codContaBancoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dataBaixa {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledt_RelConta.dataBaixaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dataBaixa\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.dataBaixaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descricao {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.descricaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descricao\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.descricaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agencia {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.agenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agencia\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.agenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expr1 {
                get {
                    try {
                        return ((string)(this[this.tabledt_RelConta.Expr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr1\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal saldo {
                get {
                    try {
                        return ((decimal)(this[this.tabledt_RelConta.saldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saldo\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.saldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int codBanco {
                get {
                    try {
                        return ((int)(this[this.tabledt_RelConta.codBancoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codBanco\' in table \'dt_RelConta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_RelConta.codBancoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodEntradaNull() {
                return this.IsNull(this.tabledt_RelConta.codEntradaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodEntradaNull() {
                this[this.tabledt_RelConta.codEntradaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodSaidaNull() {
                return this.IsNull(this.tabledt_RelConta.codSaidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodSaidaNull() {
                this[this.tabledt_RelConta.codSaidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdocumentoNull() {
                return this.IsNull(this.tabledt_RelConta.documentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdocumentoNull() {
                this[this.tabledt_RelConta.documentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodPessoaNull() {
                return this.IsNull(this.tabledt_RelConta.codPessoaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodPessoaNull() {
                this[this.tabledt_RelConta.codPessoaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssituacaoNull() {
                return this.IsNull(this.tabledt_RelConta.situacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsituacaoNull() {
                this[this.tabledt_RelConta.situacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobservacaoNull() {
                return this.IsNull(this.tabledt_RelConta.observacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobservacaoNull() {
                this[this.tabledt_RelConta.observacaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscpf_CnpjNull() {
                return this.IsNull(this.tabledt_RelConta.cpf_CnpjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcpf_CnpjNull() {
                this[this.tabledt_RelConta.cpf_CnpjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenderecoNull() {
                return this.IsNull(this.tabledt_RelConta.enderecoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenderecoNull() {
                this[this.tabledt_RelConta.enderecoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscepNull() {
                return this.IsNull(this.tabledt_RelConta.cepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcepNull() {
                this[this.tabledt_RelConta.cepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbairroNull() {
                return this.IsNull(this.tabledt_RelConta.bairroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbairroNull() {
                this[this.tabledt_RelConta.bairroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscidadeNull() {
                return this.IsNull(this.tabledt_RelConta.cidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcidadeNull() {
                this[this.tabledt_RelConta.cidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsufNull() {
                return this.IsNull(this.tabledt_RelConta.ufColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetufNull() {
                this[this.tabledt_RelConta.ufColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfone1Null() {
                return this.IsNull(this.tabledt_RelConta.fone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfone1Null() {
                this[this.tabledt_RelConta.fone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfone2Null() {
                return this.IsNull(this.tabledt_RelConta.fone2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfone2Null() {
                this[this.tabledt_RelConta.fone2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslimiteCompraNull() {
                return this.IsNull(this.tabledt_RelConta.limiteCompraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlimiteCompraNull() {
                this[this.tabledt_RelConta.limiteCompraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorComissaoNull() {
                return this.IsNull(this.tabledt_RelConta.valorComissaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorComissaoNull() {
                this[this.tabledt_RelConta.valorComissaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodPagamentoNull() {
                return this.IsNull(this.tabledt_RelConta.codPagamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodPagamentoNull() {
                this[this.tabledt_RelConta.codPagamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodFormaPagamentoNull() {
                return this.IsNull(this.tabledt_RelConta.codFormaPagamentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodFormaPagamentoNull() {
                this[this.tabledt_RelConta.codFormaPagamentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorPagoNull() {
                return this.IsNull(this.tabledt_RelConta.valorPagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorPagoNull() {
                this[this.tabledt_RelConta.valorPagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorDiferencaNull() {
                return this.IsNull(this.tabledt_RelConta.valorDiferencaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorDiferencaNull() {
                this[this.tabledt_RelConta.valorDiferencaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodContaBancoNull() {
                return this.IsNull(this.tabledt_RelConta.codContaBancoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodContaBancoNull() {
                this[this.tabledt_RelConta.codContaBancoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataBaixaNull() {
                return this.IsNull(this.tabledt_RelConta.dataBaixaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataBaixaNull() {
                this[this.tabledt_RelConta.dataBaixaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescricaoNull() {
                return this.IsNull(this.tabledt_RelConta.descricaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescricaoNull() {
                this[this.tabledt_RelConta.descricaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsagenciaNull() {
                return this.IsNull(this.tabledt_RelConta.agenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetagenciaNull() {
                this[this.tabledt_RelConta.agenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpr1Null() {
                return this.IsNull(this.tabledt_RelConta.Expr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpr1Null() {
                this[this.tabledt_RelConta.Expr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaldoNull() {
                return this.IsNull(this.tabledt_RelConta.saldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaldoNull() {
                this[this.tabledt_RelConta.saldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodBancoNull() {
                return this.IsNull(this.tabledt_RelConta.codBancoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodBancoNull() {
                this[this.tabledt_RelConta.codBancoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dt_RelContaRowChangeEvent : global::System.EventArgs {
            
            private dt_RelContaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_RelContaRowChangeEvent(dt_RelContaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_RelContaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SACE.Dados.saceRelatoriosDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dt_RelContaTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dt_RelContaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dt_RelConta";
            tableMapping.ColumnMappings.Add("codConta", "codConta");
            tableMapping.ColumnMappings.Add("codEntrada", "codEntrada");
            tableMapping.ColumnMappings.Add("codSaida", "codSaida");
            tableMapping.ColumnMappings.Add("documento", "documento");
            tableMapping.ColumnMappings.Add("codPlanoConta", "codPlanoConta");
            tableMapping.ColumnMappings.Add("codPessoa", "codPessoa");
            tableMapping.ColumnMappings.Add("dataVencimento", "dataVencimento");
            tableMapping.ColumnMappings.Add("valor", "valor");
            tableMapping.ColumnMappings.Add("situacao", "situacao");
            tableMapping.ColumnMappings.Add("observacao", "observacao");
            tableMapping.ColumnMappings.Add("tipoConta", "tipoConta");
            tableMapping.ColumnMappings.Add("nome", "nome");
            tableMapping.ColumnMappings.Add("cpf_Cnpj", "cpf_Cnpj");
            tableMapping.ColumnMappings.Add("endereco", "endereco");
            tableMapping.ColumnMappings.Add("cep", "cep");
            tableMapping.ColumnMappings.Add("bairro", "bairro");
            tableMapping.ColumnMappings.Add("cidade", "cidade");
            tableMapping.ColumnMappings.Add("uf", "uf");
            tableMapping.ColumnMappings.Add("fone1", "fone1");
            tableMapping.ColumnMappings.Add("fone2", "fone2");
            tableMapping.ColumnMappings.Add("limiteCompra", "limiteCompra");
            tableMapping.ColumnMappings.Add("valorComissao", "valorComissao");
            tableMapping.ColumnMappings.Add("Tipo", "Tipo");
            tableMapping.ColumnMappings.Add("codPagamento", "codPagamento");
            tableMapping.ColumnMappings.Add("codFormaPagamento", "codFormaPagamento");
            tableMapping.ColumnMappings.Add("valorPago", "valorPago");
            tableMapping.ColumnMappings.Add("valorDiferenca", "valorDiferenca");
            tableMapping.ColumnMappings.Add("codContaBanco", "codContaBanco");
            tableMapping.ColumnMappings.Add("dataBaixa", "dataBaixa");
            tableMapping.ColumnMappings.Add("descricao", "descricao");
            tableMapping.ColumnMappings.Add("agencia", "agencia");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            tableMapping.ColumnMappings.Add("saldo", "saldo");
            tableMapping.ColumnMappings.Add("codBanco", "codBanco");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::SACE.Dados.Properties.Settings.Default.saceConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[2];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        tb_conta.codConta, tb_conta.codEntrada, tb_conta.codSaida, tb_conta.documento, tb_conta.codPlanoConta, tb_conta.codPessoa, tb_conta.dataVencimento, 
                         tb_conta.valor, tb_conta.situacao, tb_conta.observacao, tb_conta.tipoConta, tb_pessoa.nome, tb_pessoa.cpf_Cnpj, tb_pessoa.endereco, tb_pessoa.cep, 
                         tb_pessoa.bairro, tb_pessoa.cidade, tb_pessoa.uf, tb_pessoa.fone1, tb_pessoa.fone2, tb_pessoa.limiteCompra, tb_pessoa.valorComissao, tb_pessoa.Tipo, 
                         tb_baixa_conta.codPagamento, tb_baixa_conta.codFormaPagamento, tb_baixa_conta.valorPago, tb_baixa_conta.valorDiferenca, tb_baixa_conta.codContaBanco, 
                         tb_baixa_conta.dataBaixa, tb_forma_pagamento.descricao, tb_conta_banco.agencia, tb_conta_banco.descricao AS Expr1, tb_conta_banco.saldo, 
                         tb_conta_banco.codBanco
FROM            tb_forma_pagamento INNER JOIN
                         tb_baixa_conta ON tb_forma_pagamento.codFormaPagamento = tb_baixa_conta.codFormaPagamento INNER JOIN
                         tb_conta_banco ON tb_baixa_conta.codContaBanco = tb_conta_banco.codContaBanco RIGHT OUTER JOIN
                         tb_conta INNER JOIN
                         tb_pessoa ON tb_conta.codPessoa = tb_pessoa.codPessoa ON tb_baixa_conta.codConta = tb_conta.codConta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        tb_conta.codConta, tb_conta.codEntrada, tb_conta.codSaida, tb_conta" +
                ".documento, tb_conta.codPlanoConta, tb_conta.codPessoa, tb_conta.dataVencimento," +
                " \r\n                         tb_conta.valor, tb_conta.situacao, tb_conta.observac" +
                "ao, tb_conta.tipoConta, tb_pessoa.nome, tb_pessoa.cpf_Cnpj, tb_pessoa.endereco, " +
                "tb_pessoa.cep, \r\n                         tb_pessoa.bairro, tb_pessoa.cidade, tb" +
                "_pessoa.uf, tb_pessoa.fone1, tb_pessoa.fone2, tb_pessoa.limiteCompra, tb_pessoa." +
                "valorComissao, tb_pessoa.Tipo, \r\n                         tb_baixa_conta.codPaga" +
                "mento, tb_baixa_conta.codFormaPagamento, tb_baixa_conta.valorPago, tb_baixa_cont" +
                "a.valorDiferenca, tb_baixa_conta.codContaBanco, \r\n                         tb_ba" +
                "ixa_conta.dataBaixa, tb_forma_pagamento.descricao, tb_conta_banco.agencia, tb_co" +
                "nta_banco.descricao AS Expr1, tb_conta_banco.saldo, \r\n                         t" +
                "b_conta_banco.codBanco\r\nFROM            tb_forma_pagamento INNER JOIN\r\n         " +
                "                tb_baixa_conta ON tb_forma_pagamento.codFormaPagamento = tb_baix" +
                "a_conta.codFormaPagamento INNER JOIN\r\n                         tb_conta_banco ON" +
                " tb_baixa_conta.codContaBanco = tb_conta_banco.codContaBanco RIGHT OUTER JOIN\r\n " +
                "                        tb_conta INNER JOIN\r\n                         tb_pessoa " +
                "ON tb_conta.codPessoa = tb_pessoa.codPessoa ON tb_baixa_conta.codConta = tb_cont" +
                "a.codConta\r\n\r\nwhere (tb_conta.codPessoa = @codPessoa or @codPessoa is null) and " +
                " \r\n(@dataini is null or @dataini <= tb_conta.dataVencimento) and\r\n(@datafim is n" +
                "ull or @datafim >= tb_conta.dataVencimento) and\r\n(@tipo is null or @tipo =  tb_c" +
                "onta.tipoConta) and\r\n(@situacao is null or @situacao =  tb_conta.situacao)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@codPessoa";
            param.DbType = global::System.Data.DbType.Int64;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int64;
            param.IsNullable = true;
            param.SourceColumn = "codPessoa";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@dataini";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "dataVencimento";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@datafim";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "dataVencimento";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@tipo";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "tipoConta";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@situacao";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.String;
            param.Size = 1;
            param.IsNullable = true;
            param.SourceColumn = "situacao";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(saceRelatoriosDataSet.dt_RelContaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual saceRelatoriosDataSet.dt_RelContaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            saceRelatoriosDataSet.dt_RelContaDataTable dataTable = new saceRelatoriosDataSet.dt_RelContaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByParametros(saceRelatoriosDataSet.dt_RelContaDataTable dataTable, global::System.Nullable<long> codPessoa, System.DateTime dataini, System.DateTime datafim, string tipo, string situacao) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((codPessoa.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(codPessoa.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dataini));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(datafim));
            if ((tipo == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(tipo));
            }
            if ((situacao == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(situacao));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual saceRelatoriosDataSet.dt_RelContaDataTable GetDataByParametros(global::System.Nullable<long> codPessoa, System.DateTime dataini, System.DateTime datafim, string tipo, string situacao) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((codPessoa.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((long)(codPessoa.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dataini));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(datafim));
            if ((tipo == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(tipo));
            }
            if ((situacao == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(situacao));
            }
            saceRelatoriosDataSet.dt_RelContaDataTable dataTable = new saceRelatoriosDataSet.dt_RelContaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(saceRelatoriosDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(saceRelatoriosDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(saceRelatoriosDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(saceRelatoriosDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591